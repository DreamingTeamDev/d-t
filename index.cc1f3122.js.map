{"mappings":"AAEA,MAAMA,EAAOC,SAASC,eAAe,aAE/BC,EAAa,CACjBC,KAAMH,SAASC,eAAe,QAC9BG,MAAOJ,SAASC,eAAe,SAC/BI,MAAOL,SAASC,eAAe,SAC/BK,QAASN,SAASC,eAAe,YAYK,SAA/BM,EAAwBC,GAC/BC,QAAQC,IAAIF,EAASG,MARrBT,EAAWC,KAAKS,MAAQ,GACxBV,EAAWE,MAAMQ,MAAQ,GACzBV,EAAWG,MAAMO,MAAQ,GACzBV,EAAWI,QAAQM,MAAQ,GAO3BC,MAAM,8B,CA6BoBd,EAAvBe,iBAAiB,UAnBC,SAAHC,GAClBA,EAAMC,iBAEN,MAAMC,EAAW,CACfd,KAAMD,EAAWC,KAAKS,OAAS,GAC/BR,MAAOF,EAAWE,MAAMQ,OAAS,GACjCP,MAAOH,EAAWG,MAAMO,OAAS,GACjCN,QAASJ,EAAWI,QAAQM,OAAS,IAGvC,IAEEL,EADiBW,MAAMC,KAAK,2CAA4CF,G,CAExE,MAAOG,IAnB+B,SAAXA,GAC7BX,QAAQC,IAAIU,GACZP,MAAM,kC,CAkBJQ,CAAsBD,E,KAQ1BF,MAAMI,aAAaC,QAAQC,KAAI,SAA+BC,GAE5D,OADAhB,QAAQC,IAAI,uBAAwBe,GAC7BA,C,IAGTP,MAAMI,aAAad,SAASgB,KAC1B,SAAgChB,GAE9B,OADAC,QAAQC,IAAI,wBAAyBF,GAC9BA,C,IAET,SAAqCY,GAEnC,OADAX,QAAQC,IAAI,8BAA+BU,GACpCM,QAAQC,OAAOP,E","sources":["src/js/feedback.js"],"sourcesContent":["'use strict';\n\nconst form = document.getElementById('feed-form');\n\nconst formFields = {\n  name: document.getElementById('name'),\n  email: document.getElementById('email'),\n  phone: document.getElementById('phone'),\n  message: document.getElementById('message')\n};\n\n// Функция для очистки полей формы после отправки сообщения\nfunction clearFormFields() {\n  formFields.name.value = '';\n  formFields.email.value = '';\n  formFields.phone.value = '';\n  formFields.message.value = '';\n}\n\n// Функция для обработки успешной отправки формы\nfunction handleFormSubmitSuccess(response) {\n  console.log(response.data);\n  clearFormFields();\n  alert('Your message has been sent!');\n}\n\n// Функция для обработки неуспешной отправки формы\nfunction handleFormSubmitError(error) {\n  console.log(error);\n  alert('Your message has NOT been sent!');\n}\n\n// Функция для отправки формы\nfunction submitForm(event) {\n  event.preventDefault();\n\n  const formData = {\n    name: formFields.name.value ?? '',\n    email: formFields.email.value ?? '',\n    phone: formFields.phone.value ?? '',\n    message: formFields.message.value ?? '',\n  };\n\n  try {\n    const response = axios.post('https://m-ojdg.onrender.com/api/feedback', formData);\n    handleFormSubmitSuccess(response);\n  } catch (error) {\n    handleFormSubmitError(error);\n  }\n}\n\n// Добавление обработчика событий\nform.addEventListener('submit', submitForm);\n\n// Интерсепторы axios\naxios.interceptors.request.use(function logRequestInterceptor(config) {\n  console.log('Request Interceptor:', config);\n  return config;\n});\n\naxios.interceptors.response.use(\n  function logResponseInterceptor(response) {\n    console.log('Response Interceptor:', response);\n    return response;\n  },\n  function logResponseErrorInterceptor(error) {\n    console.log('Response Interceptor Error:', error);\n    return Promise.reject(error);\n  }\n);"],"names":["$f9c8fe53a3f1e506$var$form","document","getElementById","$f9c8fe53a3f1e506$var$formFields","name","email","phone","message","$f9c8fe53a3f1e506$var$handleFormSubmitSuccess","response","console","log","data","value","alert","addEventListener","event","preventDefault","formData","axios","post","error","$f9c8fe53a3f1e506$var$handleFormSubmitError","interceptors","request","use","config","Promise","reject"],"version":3,"file":"index.cc1f3122.js.map"}